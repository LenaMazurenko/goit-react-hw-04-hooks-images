{"version":3,"sources":["components/Searchbar.styled.js","components/Searchbar.js","components/ImageGallery.styled.js","components/ImageGallery.js","components/Button.styled.js","components/Button.js","components/Modal.styled.js","components/Modal.js","App.js","utils/fetchQuery.js","index.js"],"names":["Header","styled","header","Form","form","SubmitBtn","button","Input","input","Searchbar","onSubmitProp","useState","searchWord","setSearchWord","onSubmit","e","preventDefault","trim","toast","error","type","value","onChange","currentTarget","toLowerCase","autocomplete","autoFocus","placeholder","fontSize","LoaderWrapper","div","Grid","ul","Item","li","Image","img","ImageGallery","handlerClickImg","images","map","item","src","webformatURL","alt","onClick","largeImageURL","id","LoadBtn","Button","onClickProp","Overlay","ModalImg","modalRoot","document","querySelector","Modal","url","createPortal","App","setImages","status","setStatus","page","setPage","showModal","setShowModal","activImg","setActivImg","useEffect","query","fetch","then","response","json","fetchQuery","total","prevState","hits","catch","window","removeEventListener","closeModal","target","code","addEventListener","color","height","width","p","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f6160f88.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Header = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const SubmitBtn = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n`;\r\n","import { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { Header, Form, SubmitBtn, Input } from './Searchbar.styled';\r\nimport { MdImageSearch } from 'react-icons/md';\r\n\r\nexport default function Searchbar({ onSubmitProp }) {\r\n  const [searchWord, setSearchWord] = useState('');\r\n\r\n  //==============================================\r\n  const handleWordChange = e => {\r\n    setSearchWord(e.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  //=================================\r\n  const handleWordSubmit = e => {\r\n    e.preventDefault();\r\n    if (searchWord.trim() === '') {\r\n      return toast.error('Enter query');\r\n    }\r\n    // Проп который передается форме для вызова при сабмите\r\n    onSubmitProp(searchWord);\r\n    setSearchWord('');\r\n  };\r\n\r\n  return (\r\n    <Header>\r\n      <Form onSubmit={handleWordSubmit}>\r\n        <Input\r\n          type=\"text\"\r\n          value={searchWord}\r\n          onChange={handleWordChange}\r\n          autocomplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n        <SubmitBtn type=\"submit\">\r\n          <MdImageSearch fontSize=\"2em\" />\r\n        </SubmitBtn>\r\n      </Form>\r\n    </Header>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const LoaderWrapper = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nexport const Grid = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 10px;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  :hover {\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Grid, Item, Image } from './ImageGallery.styled';\r\n\r\nexport default function ImageGallery({ handlerClickImg, images }) {\r\n  return (\r\n    <Grid>\r\n      {images.map(item => (\r\n        <Item key={item.id}>\r\n          <Image\r\n            src={item.webformatURL}\r\n            alt=\"\"\r\n            onClick={() => handlerClickImg(item.largeImageURL)}\r\n          />\r\n        </Item>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\nImageGallery.propTypes = {\r\n  handlerClickImg: PropTypes.func,\r\n  images: PropTypes.array,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const LoadBtn = styled.button`\r\n  margin: 10px auto;\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  :hover,\r\n  :focus {\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { LoadBtn } from './Button.styled';\r\n\r\nexport default function Button({ onClickProp }) {\r\n  return (\r\n    <LoadBtn type=\"button\" onClick={onClickProp}>\r\n      Load More\r\n    </LoadBtn>\r\n  );\r\n}\r\nButton.propTypes = {\r\n  onClickProp: PropTypes.func,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`;\r\n\r\nexport const ModalImg = styled.div`\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\nimport { Overlay, ModalImg } from './Modal.styled';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({ url, onClick }) {\r\n  return createPortal(\r\n    <Overlay onClick={onClick}>\r\n      <ModalImg>\r\n        <img src={url} alt=\"\" />\r\n      </ModalImg>\r\n    </Overlay>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClick: PropTypes.func,\r\n  url: PropTypes.string,\r\n};\r\n","import { useState, useEffect } from 'react';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport fetchQuery from './utils/fetchQuery';\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\n\nimport { LoaderWrapper } from './components/ImageGallery.styled';\n\nexport default function App() {\n  const [images, setImages] = useState([]);\n  const [searchWord, setSearchWord] = useState('');\n  const [status, setStatus] = useState('idle');\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [activImg, setActivImg] = useState('');\n\n  useEffect(() => {\n    // чтоб при первой загрузке не выполнялся fetch\n    if (status === 'idle') return;\n\n    setStatus('pending');\n    fetchQuery(searchWord, page)\n      .then(images => {\n        if (images.total) {\n          setImages(prevState => [...prevState, ...images.hits]);\n          setStatus('resolved');\n        } else {\n          setStatus('reject');\n          toast.error('Bad request, try again!');\n        }\n      })\n      .catch(error => setStatus('error'));\n\n    return () => {\n      window.removeEventListener('keydown', closeModal);\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchWord, page]);\n\n  const handleformSubmit = searchWord => {\n    setStatus('pending');\n    setSearchWord(searchWord);\n    setPage(1);\n    setImages([]);\n  };\n\n  const handleImageClick = url => {\n    setActivImg(url);\n    setShowModal(true);\n    window.addEventListener('keydown', closeModal);\n  };\n  const closeModal = e => {\n    if (e.currentTarget === e.target || e.code === 'Escape') {\n      setActivImg('');\n      setShowModal(false);\n      window.removeEventListener('keydown', closeModal);\n    }\n  };\n\n  //===============================\n  return (\n    <>\n      <Searchbar onSubmitProp={handleformSubmit} />\n      <ImageGallery handlerClickImg={handleImageClick} images={images} />\n      {status === 'pending' && (\n        <LoaderWrapper>\n          <Loader type=\"Oval\" color=\"#00BFFF\" height={80} width={80} />\n        </LoaderWrapper>\n      )}\n      {status === 'resolved' && (\n        <Button onClickProp={() => setPage(p => p + 1)} />\n      )}\n      {showModal && <Modal url={activImg} onClick={closeModal} />}\n      <ToastContainer autoClose={2000} />\n    </>\n  );\n}\n","export default function fetchQuery(query, page) {\r\n  const key =\r\n    '24022997-1f6b45243be8e45a3cc65a02f&image_type=photo&orientation=horizontal&per_page=12';\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=${key}`,\r\n  ).then(response => response.json());\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}